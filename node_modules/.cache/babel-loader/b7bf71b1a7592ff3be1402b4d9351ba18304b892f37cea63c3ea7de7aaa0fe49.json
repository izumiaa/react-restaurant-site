{"ast":null,"code":"var _jsxFileName = \"/Users/izumi/react-restaurant-site/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link as ScrollLink } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  scrollToSection // New prop to specify the section to scroll to\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(ScrollLink, {\n    to: scrollToSection,\n    className: \"btn-mobile\",\n    smooth: true,\n    duration: 500,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n      onClick: onClick,\n      type: type,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Link","ScrollLink","jsxDEV","_jsxDEV","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","scrollToSection","checkButtonStyle","includes","checkButtonSize","to","className","smooth","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/izumi/react-restaurant-site/src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport './Button.css';\nimport { Link as ScrollLink } from 'react-scroll';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  scrollToSection // New prop to specify the section to scroll to\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <ScrollLink\n      to={scrollToSection} \n      className='btn-mobile'\n      smooth={true}\n      duration={500}\n    >\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </ScrollLink>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,IAAI,IAAIC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,WAAW,CAAC;AAC5D,MAAMC,KAAK,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC;AAE3C,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACrBC,QAAQ;EACRC,IAAI;EACJC,OAAO;EACPC,WAAW;EACXC,UAAU;EACVC,eAAe,CAAC;AAClB,CAAC,KAAK;EACJ,MAAMC,gBAAgB,GAAGT,MAAM,CAACU,QAAQ,CAACJ,WAAW,CAAC,GAAGA,WAAW,GAAGN,MAAM,CAAC,CAAC,CAAC;EAC/E,MAAMW,eAAe,GAAGV,KAAK,CAACS,QAAQ,CAACH,UAAU,CAAC,GAAGA,UAAU,GAAGN,KAAK,CAAC,CAAC,CAAC;EAE1E,oBACEF,OAAA,CAACF,UAAU;IACTe,EAAE,EAAEJ,eAAgB;IACpBK,SAAS,EAAC,YAAY;IACtBC,MAAM,EAAE,IAAK;IACbC,QAAQ,EAAE,GAAI;IAAAZ,QAAA,eAEdJ,OAAA;MACEc,SAAS,EAAG,OAAMJ,gBAAiB,IAAGE,eAAgB,EAAE;MACxDN,OAAO,EAAEA,OAAQ;MACjBD,IAAI,EAAEA,IAAK;MAAAD,QAAA,EAEVA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAACC,EAAA,GA3BWlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}